version: "3"
tasks:
  default:
    cmds:
      - task: tidy
      - task: swagger
      - task: format
      - task: lint
      - task: cloc
      - echo "Both done"

  check:
    cmds:
      - task: lint
      - task: secure
      - task: leak
      - task: gosec
      - echo "Both done"

  build:
    cmds:
      - go build -v -o tmp github.com/sysatom/framework/cmd

  run:
    cmds:
      - go run -tags swagger github.com/sysatom/framework/cmd

  cloc:
    cmds:
      - cloc --exclude-dir=node_modules --exclude-ext=json --out=./cloc/{{ now.Format "2006-01-02" }}.txt .
    generates:
      - ./cloc/{{ now.Format "2006-01-02" }}.txt

  lint:
    cmds:
      - revive -config revive.toml -formatter friendly ./...

  swagger:
    cmds:
      - swag init -g cmd/main.go
      - swag fmt -g cmd/main.go

  tools:
    cmds:
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install github.com/mgechev/revive@latest
      - go install github.com/swaggo/swag/cmd/swag@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - go install github.com/hibiken/asynq/tools/asynq@latest
      - go install github.com/zricethezav/gitleaks/v8@v8.24.2
      - go install github.com/air-verse/air@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest
      - cmd: winget install AlDanial.Cloc
        platforms: [windows]
      - cmd: sudo apt install cloc
        platforms: [linux]
      - npm install -g prettier

  secure:
    cmds:
      - govulncheck ./...

  model:
    cmds:
      - go run -mod=mod entgo.io/ent/cmd/ent new {{ .CLI_ARGS }}

  ent:
    cmds:
      - go generate ./ent

  tidy:
    cmds:
      - go mod tidy

  leak:
    cmds:
      - gitleaks git -v

  format:
    cmds:
      - go fmt ./...
      - npx prettier --write .

  air:
    cmds:
      - air --build.cmd "go build -o app cmd/main.go" --build.bin "./app"

  gosec:
    cmds:
      - gosec ./...
